// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int                   @id @default(autoincrement())
  name        String
  email       String                @unique
  bio         String?
  avatarUrl   String?
  experiences Experience[]
  projects    Project[]
  skills      Skill[]
  educations  Education[]
  trainings   TrainingCertificate[]
  languages   Language[]
}

model Experience {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  title       String
  company     String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  description String?
}

model Project {
  id          Int     @id @default(autoincrement())
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  description String?
  url         String?
  imageUrl    String?
  techStack   String?
}

model Skill {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  name   String
  level  String? // e.g., Beginner, Intermediate, Expert
}

model Education {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  school      String
  degree      String
  field       String?
  startDate   DateTime
  endDate     DateTime?
  description String?
}

model TrainingCertificate {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  name       String
  issuer     String
  issueDate  DateTime
  expiryDate DateTime?
  url        String?
}

model Language {
  id          Int     @id @default(autoincrement())
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  proficiency String? // e.g., Native, Fluent, Intermediate
}
